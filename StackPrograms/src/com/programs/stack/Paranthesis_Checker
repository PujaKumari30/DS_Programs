/*Paranthesis Checker - Given an expression string exp. Examine whether the pairs and the orders of “{“,”}”,”(“,”)”,”[“,”]” are correct in exp.
For example, the program should print 'balanced' for exp = “[()]{}{[()()]()}” and 'not balanced' for exp = “[(])” */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main (String[] args) {
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		while(t-->0)
		{
		    int flag =0;
		    String str = sc.next();
		    int n = str.length();
		    Stack<Character> st = new Stack<Character>();
		    for(int i =0;i<n;i++)
		    {
		        char ch = str.charAt(i);
		        if(ch == '{'|| ch == '('|| ch == '[')
		        st.push(ch);
		        else
		        {
		            if(st.isEmpty())
		            {
		                flag =0;
		                break;   
		            }
		            else{
		              char ch1 = st.pop();
		              if(ch1 == '{' && ch =='}' || ch1 == '[' && ch ==']' || ch1 == '(' && ch ==')')
		                flag =1;
		              else
		              {
		                flag =0;
		                break;
		              }
		            }
		        }
		    }
		    
		    if(flag ==1 && st.isEmpty())
		    System.out.println("balanced");
		    else
		    System.out.println("not balanced");
		}
	}
}
